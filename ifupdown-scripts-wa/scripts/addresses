#!/bin/sh
#
# Stefan Tomanek <stefan.tomanek@wertarbyte.de>
# http://wertarbyte.de/debian/
#
# Place in /etc/network/if-up.d/ and link to
# /etc/network/if-down.d/
# 
# Configure additional addresses by specifying
# "addresses" in your /etc/network/interfaces file:
# 
# iface eth0 inet dhcp
#   addresses 10.0.0.1/8 192.168.10.4/24
#   addresses-foo 192.168.2.4/24
#   addresses-bar 172.17.2.1/16
#
# To make the addresses visible in legacy commands like
# "ifconfig", the script can create the deprecated alias
# devices (e.g. eth0:1) for you. To achieve this bevahiour,
# specify "create_alias_devices yes" in your configuration
# stanca.
#
# You can also use the labels used in /etc/network/interfaces
# to distinguish the configured addresses in the output of
# "ifconfig" and "ip addr". Simply set the configuration
# option "label_addresses yes". This option can also be
# combined with "create_alias_devices": While any addresses
# line accompanied by a label will be marked with it, anonymous
# addresses will be enumerated by the script.
#
# This script is published under the rules of the GPLv3
# http://www.gnu.org/licenses/gpl.html

CMD_IP=/bin/ip


if [ ! -x $CMD_IP ]; then
  exit 0
fi

if [ "$MODE" = "start" ]; then
  OP="add"
else
  OP="del"
fi
COMPAT_DEVS=""
LABEL_ADDRESSES=""

if [ "$IF_CREATE_ALIAS_DEVICES" = "yes" ]; then
    # create enumerated labels (eth0:1, eth0:2...)
    COMPAT_DEVS="1"
fi

if [ "$IF_LABEL_ADDRESSES" = "yes" ]; then
    # use labels specifed in the configation (eth0:https, eth0:vserver...)
    LABEL_ADDRESSES="1"
fi


# print all addresses with the label next to it
ADDRESSES="$(/usr/bin/awk 'BEGIN {
    for (key in ENVIRON) {
        if (key ~ /^IF_ADDRESSES(-|_|$)/) {
            label = tolower( substr(key, length("IF_ADDRESSES_")+1) );
            split(ENVIRON[key], A);
            for (j in A) {
                addr = A[j];
                print addr " " label;
            }
        }
    }
}')"

N=1
echo "$ADDRESSES" | while read ADDR ALABEL; do
  LABEL=""
  # we don't want to specify the label when removing addresses
  if [ "del" != "$OP" ]; then
    if [ "$COMPAT_DEVS" -a ! "$LABEL_ADDRESSES" ]; then
        ALABEL="$N"
        N=$(($N+1))
    fi
    if [ "$ALABEL" ] && [ "$COMPAT_DEVS" -o "LABEL_ADDRESSES" ]; then
        LABEL="label $IFACE:$ALABEL"
    fi
  fi
  echo $CMD_IP addr $OP $ADDR dev $IFACE $LABEL
done
